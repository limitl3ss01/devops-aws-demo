name: Deploy to Production

on:
  push:
    branches: [ production ]

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          cd app
          python -m pytest test_main.py -v

      - name: Build Docker image
        run: |
          docker build -t zajaczek01/devops-aws-demo:production -f docker/Dockerfile .

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        run: |
          docker push zajaczek01/devops-aws-demo:production

      - name: Sync code to production server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USER }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          source: "."
          target: "~/devops-aws-demo"

      - name: Deploy on production EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USER }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          script: |
            export ENVIRONMENT=production
            chmod +x ~/devops-aws-demo/scripts/deploy.sh
            chmod +x ~/devops-aws-demo/scripts/setup-monitoring.sh
            cd ~/devops-aws-demo/scripts
            ./deploy.sh

      - name: Verify production deployment
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USER }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          script: |
            sleep 30
            if curl -f http://localhost:5000/health > /dev/null 2>&1; then
              echo "✅ Production deployment verification successful!"
              echo "🌐 Production App URL: http://${{ secrets.PRODUCTION_HOST }}:5000"
              echo "📊 Production Metrics: http://${{ secrets.PRODUCTION_HOST }}:5000/metrics"
              echo "📈 Production Grafana: http://${{ secrets.PRODUCTION_HOST }}:3000"
            else
              echo "❌ Production deployment verification failed!"
              exit 1
            fi 